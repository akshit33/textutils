{"version":3,"sources":["components/Textform.js","components/Navbar.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Textform","props","useState","text","setText","className","style","color","mode","heading","value","onChange","event","console","log","target","backgroundColor","id","rows","onClick","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","join","length","Navbar","href","title","type","placeholder","toggleMode","role","htmlFor","defaultProps","aboutText","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.37f99b6a.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n    const handleupclick =()=>{\r\n        console.log(\"Uppercase was clicked\" +text)\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n      //  setText(\"you write your text\")\r\n   props.showAlert(\"Converted to upper case\",\"success\");\r\n    }\r\n    const handleLoclick =()=>{\r\n        console.log(\"Lowercase was clicked\" +text)\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lower case\",\"success\");\r\n    }\r\n    const handleClearclick =()=>{\r\n        console.log(\"ClearText is clicked\" +text)\r\n        let newText=\" \";\r\n        setText(newText);\r\n        props.showAlert(\"Text cleared\",\"success\");\r\n    }\r\n    const handleOnChange =(event)=>{\r\n        console.log(\"Handleonchange clicked\")\r\n        //let newText=text.toUpperCase();\r\n        //setText(newText);\r\n        setText(event.target.value)\r\n    }\r\n    const handleCopy=()=>{\r\n        console.log(\"I m copy\");\r\n        var text=document.getElementById(\"myBox\");\r\n        text.select();\r\n        text.setSelectionRange(0,9999);\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copy to clipboard\",\"success\");\r\n    }\r\n    const handleExtraspaces=()=>{\r\n        let newText=text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra space removed\",\"success\");\r\n    }\r\n    const[text, setText] = useState(\" \");\r\n   //setText(\"new text\");\r\n    return (\r\n        <>    \r\n<div\r\nclassName=\"container\" style={{color:props.mode===\"dark\"?\"white\":\"#091454\"}}>\r\n<h1>{props.heading} </h1>\r\n <div className=\"mb-3\">                            \r\n  <textarea className=\"form-control\"  value={text} onChange={handleOnChange} style={{backgroundColor:props.mode===\"dark\"?\"grey\":\"white\",color:props.mode===\"dark\"?\"white\":\"#091454\"}} id=\"myBox\" rows=\"8\"></textarea>\r\n</div>\r\n\r\n<button className=\"btn btn-primary mx-2\" onClick={handleupclick\r\n\r\n}> Convert to upper case</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleLoclick\r\n\r\n}> Convert to Lower case</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleClearclick\r\n\r\n}> CLear Text</button>\r\n<button className=\"btn btn-primary mx-8\" onClick={handleCopy\r\n\r\n}> Copy Text</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleExtraspaces\r\n\r\n}> Extra Spaces</button>\r\n\r\n</div>\r\n\r\n\r\n\r\n<div className=\"container my-3\"style={{color:props.mode===\"dark\"?\"white\":\"dark\"}}>\r\n    <h1>Your text summary</h1>\r\n    <p>{text.split(\" \").length} words and {text.length}characters</p>\r\n    <p>{0.008*text.split(\" \").length}Minutes read</p>\r\n    <h2>Preview</h2>\r\n    <p>{text.length>0?text:\"Enter something in box above to preview it\"}</p>\r\n</div>\r\n</>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/*<li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.aboutText} </Link>\r\n                </li>*/}\r\n              \r\n            </ul>\r\n            <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"></input>\r\n              <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n            </form>\r\n            <div className={`form-check form-switch text-${props.mode===\"light\"?\"dark\":\"light\"}`} >\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark mode</label>\r\n</div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n Navbar.propTypes={\r\n     title: PropTypes.string.isRequired,\r\n     aboutText:PropTypes.string\r\n }\r\n Navbar.defaultProps={\r\n   title:\"Set Title here\",\r\naboutText:\"About text here\"\r\n }","\r\nimport React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize =(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className= \"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n          <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n        \r\n     \r\n    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","//import logo from './logo.svg';\n//import Navbar from './components/Navbar';\nimport './App.css';\n//import About from './components/About';\nimport Textform from './components/Textform';\n//import alert from './components/alert';\nimport Navbar from './components/Navbar';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n\n//import Alert from './components/alert';\n//import Textform from './components/Textform';\n//let name =\"hello herry\"\n\n{/*import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";*/}\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n const showAlert = (message,type)=>{\n    setAlert({\n       msg: message,\n       type: type\n\n   })\n   setTimeout(() => {\n     setAlert(null);\n     \n   },1500);\n }\n  const toggleMode=()=>{\n    if(mode===\"light\"){\n      setMode(\"dark\");\n      document.body.style.backgroundColor=\"#091454\";\n      showAlert(\"Dark mode has been enabled\",\"successs\")\n      document.title=\"Textutils -dark mode\"\n    //  setInterval(() => {\n      //  document.title=\"  Textutils  is amazing now\"\n     // }, 1500);\n      //setInterval(() => {\n        //document.title=\" Install Textutils now\"\n      //}, 1500);\n    \n    }\n    else{\n      setMode(\"light\");\n      document.body.style.backgroundColor=\"white\";\n      showAlert(\"light mode has been enabled\",\"successs\")\n      document.title=\"Textutils - light mode\"\n     \n    \n    }\n    }\n\n  \n  return (\n    \n    <>\n    \n  \n{/*<Navbar title = \"Textutils\" aboutText=\"About textutils\">\n<Navbar/>\n<Router>*/}\n<Navbar title=\"Textutils\" mode={mode} toggleMode={toggleMode}/>\n<Alert alert={alert}/>\n<div className=\"container my-3\">\n   {/*<Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n         \n          <Route exact path=\"/\">\n          <Textform showAlert={showAlert} heading =\"Enter the text to analyse\"  mode={mode}/>\n          </Route>\n   </Switch>*/}\n   </div>\n   {/*</Router>\n         {/* <Route path=\"/about\">\n            <About />\n          </Route>\n  \n          <Route path=\"/\">*/}\n          <Textform showAlert={showAlert} heading =\"Enter the text to analyse\"  mode={mode}/>\n          {/*</Route>*/}\n          \n        \n  {/*<Textform showAlert={showAlert} heading =\"Enter the text to analyse\"  mode={mode}/>\n  \n\n  \n{/*<About/>*/}\n\n\n</>\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}